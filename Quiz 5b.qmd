---
title: "Quiz 4a"
author: "Mohammed Yusuf Shaikh"
format: html
---

---
title: "Quiz 4a"
author: "Mohammed Yusuf Shaikh"
---

```{r}
install.packages('ggplot2')
install.packages('tidyverse')
install.packages('janitor')
install.packages('dplyr')
```


```{r}
library('tibble')
# Set seed for reproducibility
set.seed(10)

# Simulating the data
simulated_election_data <- tibble(
  Campaign_Day = 1:15,
  Approval_Rating = runif(15, 30, 70),
  Vote_Share_Candidate1 = Approval_Rating + runif(15, -10, 10))

print(simulated_election_data)

```
```{r}
ggplot(simulated_election_data, aes(x = Campaign_Day)) +
  geom_line(aes(y = Approval_Rating, color = "Approval Rating"), size = 1) +
  geom_line(aes(y = Vote_Share_Candidate1, color = "Vote Share"), size = 1) +
  labs(x = "Campaign Day", y = "Percentage", 
       title = "Line Graph of Approval Rating and Vote Share Over Time") +
  scale_color_manual(values = c("Approval Rating" = "blue", "Vote Share" = "green")) +
  theme_minimal()
```

```{r}
#Test 1
nrow(simulated_election_data) == 15

# Test 2
class(simulated_election_data$Approval_Rating) == "numeric"

# Test 3
all(simulated_election_data$Approval_Rating <= 70)


# Test 4: Range Test for Approval rating
all(simulated_election_data$Approval_Rating >= 30)

# Test 5
!any(is.na(simulated_election_data))

```


```{r}
library('readr')
library('dplyr')
upworthy <- read_csv("https://osf.io/vy8mj/download")
upworthy |>
  names()
upworthy_restricted <-
  upworthy |>
  select(
    created_at, clickability_test_id, headline, impressions, clicks
    )
upworthy_restricted <-
  upworthy |>
  select(
    created_at, clickability_test_id, headline, impressions, clicks
  ) |>
  mutate(
    exclamation_mark =
      str_detect(string = headline, pattern = "!")
  )

upworthy_restricted |>
  count(exclamation_mark)
exclamation_or_not <-
  upworthy_restricted |>
  summarise(
    ave_clicks = mean(clicks),
    .by = c(clickability_test_id, exclamation_mark)
  ) 

exclamation_or_not |>
  pivot_wider(names_from = exclamation_mark,
              values_from = ave_clicks,
              names_prefix = "ave_clicks_") |>
  drop_na(ave_clicks_FALSE, ave_clicks_TRUE) |>
  mutate(difference_in_clicks = ave_clicks_TRUE - ave_clicks_FALSE) |> 
  summarise(average_difference = mean(difference_in_clicks))
exclamation_or_not |> 
  summarise(mean = mean(ave_clicks),
            .by = exclamation_mark) |> 
  kable(
    col.names = c("Has exclamation mark?", "Mean clicks"),
    digits = 1
  )

```




